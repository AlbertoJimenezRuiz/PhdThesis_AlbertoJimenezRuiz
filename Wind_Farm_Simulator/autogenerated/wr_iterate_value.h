const decltype(wt.Lm) Lm=wt.Lm; (void)Lm;
const decltype(wt.Llr) Llr=wt.Llr; (void)Llr;
const decltype(wt.Lls) Lls=wt.Lls; (void)Lls;
const decltype(wt.Rs) Rs=wt.Rs; (void)Rs;
const decltype(wt.Rr) Rr=wt.Rr; (void)Rr;
const decltype(wt.Ycr) Ycr=wt.Ycr; (void)Ycr;
const decltype(wt.Friction_factor) Friction_factor=wt.Friction_factor; (void)Friction_factor;
const decltype(wt.Base_Electrical_angular_speed) Base_Electrical_angular_speed=wt.Base_Electrical_angular_speed; (void)Base_Electrical_angular_speed;
const decltype(wt.Omega_s) Omega_s=wt.Omega_s; (void)Omega_s;
const decltype(wt.Number_poles) Number_poles=wt.Number_poles; (void)Number_poles;
const decltype(wt.Kp_control) Kp_control=wt.Kp_control; (void)Kp_control;
const decltype(wt.Ki_control) Ki_control=wt.Ki_control; (void)Ki_control;
const decltype(wt.Hr) Hr=wt.Hr; (void)Hr;
const decltype(wt.Ht) Ht=wt.Ht; (void)Ht;
const decltype(wt.K_2mass) K_2mass=wt.K_2mass; (void)K_2mass;
const decltype(wt.Kopt) Kopt=wt.Kopt; (void)Kopt;
const decltype(wt.Blade_length) Blade_length=wt.Blade_length; (void)Blade_length;
const decltype(wt.Multiplier) Multiplier=wt.Multiplier; (void)Multiplier;
const decltype(wt.Base_Power) Base_Power=wt.Base_Power; (void)Base_Power;
const decltype(wt.GSC_pole_filter) GSC_pole_filter=wt.GSC_pole_filter; (void)GSC_pole_filter;
const decltype(wt.Nominal_mechanical_speed_RPM) Nominal_mechanical_speed_RPM=wt.Nominal_mechanical_speed_RPM; (void)Nominal_mechanical_speed_RPM;
const decltype(wt.Base_Voltage) Base_Voltage=wt.Base_Voltage; (void)Base_Voltage;
const decltype(input[0]) v_sd=input[0]; (void)v_sd;
const decltype(input[1]) v_sq=input[1]; (void)v_sq;
const decltype(input[2]) desired_reactive=input[2]; (void)desired_reactive;
const decltype(input[3]) wind_speed=input[3]; (void)wind_speed;
const auto x0 = (1.0/Ht);
const auto x1 = (( (Lm) * (Lm) ));
const auto x2 = (Llr + Lm);
const auto x3 = (Lls + Lm);
const auto x4 = (x1 - x2*x3);
const auto x5 = (-x4);
const auto x6 = (1.0/x4);
const auto x7 = (-x3);
const auto x8 = (x6*x7);
const auto x9 = (Rs*Base_Electrical_angular_speed);
const auto x10 = ((1.0/( (x4) * (x4) )));
const auto x11 = (-x2);
const auto x12 = (Base_Electrical_angular_speed*x6);
const auto x13 = (1.0/Rs);
const auto x14 = (( (Omega_s) * (Omega_s) ));
const auto x15 = (1.0/x11);
const auto x16 = (1.0/(-Rs*x11*x12 + Base_Electrical_angular_speed*x13*x14*x15*x5));
const auto x17 = (x1*x16);
const auto x18 = (x10*x17);
const auto x19 = (x18*x9);
const auto x20 = (Rr*Base_Electrical_angular_speed);
const auto x21 = (x20*x8);
const auto x22 = (1.0/x3);
const auto x23 = (Lm*x6);
const auto x24 = (x20*x23);
const auto x25 = (Kp_control*Base_Electrical_angular_speed);
const auto x26 = (x22*x8);
const auto x27 = (x25*x26);
const auto x28 = (Lm*x27 - x24);
const auto x29 = (x15*x28);
const auto x30 = (x5*(-Omega_s + omega_t));
const auto x31 = (Base_Electrical_angular_speed*x30);
const auto x32 = (Omega_s*x5);
const auto x33 = (x13*x32);
const auto x34 = (x16*(x22*x23*x31 - x29*x33));
const auto x35 = (Base_Electrical_angular_speed*x15);
const auto x36 = (Lm*Omega_s*x35);
const auto x37 = (Kp_control*Base_Electrical_angular_speed*x22*x6*( (x7) * (x7) ) - Lm*x29 - x21 - x34*x36);
const auto x38 = (1.0/x37);
const auto x39 = (x12*x30);
const auto x40 = (x23*x9);
const auto x41 = (x26*x31 + x34*x40 + x39);
const auto x42 = (x38*x41);
const auto x43 = (x15*x6);
const auto x44 = (x1*x43);
const auto x45 = (Omega_s*Base_Electrical_angular_speed*x16);
const auto x46 = (x44*x45);
const auto x47 = (-x19 - x42*x46 - x8);
const auto x48 = (-x23*x25 - x24);
const auto x49 = (x16*x48);
const auto x50 = (-x36*x49 - x39);
const auto x51 = (x38*x50);
const auto x52 = (Kp_control*x12*x3 - x21 + x40*x49 - x41*x51);
const auto x53 = (1.0/x52);
const auto x54 = ((1.0/( (x11) * (x11) )));
const auto x55 = (x13*x5);
const auto x56 = (x1*x15*x6 - x12*x14*x17*x54*x55 - x8);
const auto x57 = (x18*x32);
const auto x58 = (x35*x57);
const auto x59 = (x38*x56);
const auto x60 = (-x41*x59 + x58);
const auto x61 = (Ki_control*x12*x5);
const auto x62 = (x53*x61);
const auto x63 = (x60*x62);
const auto x64 = (Ki_control*Base_Electrical_angular_speed*x38*x5*x56*x6 - x51*x63);
const auto x65 = (( (Base_Electrical_angular_speed) * (Base_Electrical_angular_speed) ));
const auto x66 = (Ki_control*x15*x57);
const auto x67 = ((x38*x65*x66 - x47*x51*x62)/x64);
const auto x68 = (Ki_control*Base_Electrical_angular_speed*x47*x5*x53*x6 - x63*x67);
const auto x69 = (( (x68) * (x68) ));
const auto x70 = (( (x64) * (x64) ));
const auto x71 = (( (omega_t) * (omega_t) ));
const auto x72 = (1.0/Lm);
const auto x73 = (1.0/v_sq);
const auto x74 = (x72*x73);
const auto x75 = (Kopt*x5*x71*x74*x8);
const auto x76 = (v_sd*x33*x35 + v_sq*Base_Electrical_angular_speed);
const auto x77 = (x16*x76);
const auto x78 = (x23*x77);
const auto x79 = (( (v_sq) * (v_sq) )*x5);
const auto x80 = (desired_reactive*x32);
const auto x81 = (1.0/Omega_s);
const auto x82 = (-v_sd*x13*x15*x28*x5 + x27*x74*x81*(-x3*x80 + x79) - x34*x76);
const auto x83 = (x38*x82);
const auto x84 = (x25*x75 - x48*x77 - x51*x82);
const auto x85 = (x53*x84);
const auto x86 = (Lm*x43);
const auto x87 = (-Lm*v_sd*x13*x15*x5*x6 + x33*x77*x86 + x59*x82 - x6*x72*x73*x81*(-x7*x80 - x79) + x60*x85);
const auto x88 = (-x46*x83 - x47*x85 + x67*x87 + x75 + x78);
const auto x89 = (1.0/Hr);
const auto x90 = ((1.0/2.0)*x89);
const auto x91 = ((1.0/( (x37) * (x37) )));
const auto x92 = (x44*x90);
const auto x93 = (x38*((1.0/2.0)*Base_Electrical_angular_speed*x1*x13*x14*x16*x5*x54*x6*x89 - x19*x90 - x92));
const auto x94 = (((1.0/2.0)*Omega_s*Base_Electrical_angular_speed*x1*x15*x16*( (x41) * (x41) )*x6*x89*x91 - x41*x93 - x58*x90)/( (x52) * (x52) ));
const auto x95 = (( (Ki_control) * (Ki_control) )*( (x5) * (x5) ));
const auto x96 = (x10*x94*x95);
const auto x97 = (x65*x96);
const auto x98 = (x78*x90);
const auto x99 = (-x84);
const auto x100 = ((1.0/2.0)*Lm*Omega_s*x13*x15*x16*x5*x6*x76*x89 + Omega_s*Base_Electrical_angular_speed*x1*x15*x16*x41*x6*x82*x89*x91 - v_sd*x55*x86*x90 - x42*x98 - x82*x93);
const auto x101 = (x65*x91);
const auto x102 = (x101*x66);
const auto x103 = (-x102*x41*x89 + x61*x93);
const auto x104 = (x103*x62);
const auto x105 = (-x63*x88 - x68*x87);
const auto x106 = (2*x61*x94*x99);
const auto x107 = (x100*x62);
const auto x108 = (Hr*x4*(-( (x105) * (x105) )*(Omega_s*( (Base_Electrical_angular_speed) * (Base_Electrical_angular_speed) * (Base_Electrical_angular_speed) )*x15*x17*x90*x91*x95/( (x4) * (x4) * (x4) ) + x101*( (x50) * (x50) )*x96 - x104*x51) + x105*x64*x68*((1.0/2.0)*Ki_control*Lm*Base_Electrical_angular_speed*x10*x16*x38*x5*x76*x89 - x102*x82*x89 + x103*x53*x99 - x106*x51 - x107*x51) + x64*x88*(-x104*x105 + 2*x105*x51*x97 + x64*x68*(x106 + x107)) - x69*x70*(x100*x53*x99 + x45*( (x82) * (x82) )*x91*x92 - x83*x98 + x94*( (x99) * (x99) )) - x70*( (x88) * (x88) )*x97)/(x5*x69*x70));
const auto x109 = (1.0/Base_Electrical_angular_speed);
const auto x110 = (Multiplier*Number_poles*wind_speed);
res = (((omega_t <= 0) ? (
   x0*x108
)
: (
   (1.0/2.0)*x0*x109*(2*Base_Power*Base_Electrical_angular_speed*x108*x71 + M_PI*Blade_length*( (wind_speed) * (wind_speed) * (wind_speed) )*(-4.7236167130238886*omega_t*Blade_length*Base_Electrical_angular_speed + 60.478977782645813*x110)*exp(-21*x109*x110/(omega_t*Blade_length)))/(Base_Power*x71)
)));
